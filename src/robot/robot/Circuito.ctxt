#BlueJ class context
comment0.params=
comment0.target=Circuito()
comment0.text=\r\n\ Constructor\ gen\u00E9rico\r\n
comment1.params=ficheroEntrada\ ficheroSalida
comment1.target=Circuito(java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ de\ circuito\ con\ ficheros\ de\ entrada\ y\ salida\r\n\ @param\ ficheroEntrada\ Fichero\ que\ tiene\ descrito\ el\ circuito\r\n\ @param\ ficheroSalida\ \ Fichero\ donde\ se\ almacenar\u00E1\ la\ soluci\u00F3n\r\n
comment2.params=traza\ ficheroEntrada\ ficheroSalida
comment2.target=Circuito(boolean,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Constructor\ de\ circuito\ con\ ficheros\ de\ entrada\ y\ salida\ con\ traza\r\n\ @param\ traza\ Verdadero\ si\ se\ desea\ imprimir\ la\ traza\r\n\ @param\ ficheroEntrada\ Fichero\ que\ tiene\ descrito\ el\ circuito\r\n\ @param\ ficheroSalida\ \ Fichero\ donde\ se\ almacenar\u00E1\ la\ soluci\u00F3n\r\n
comment3.params=
comment3.target=boolean\ cargarDatos()
comment3.text=\r\n\ Carga\ los\ datos\ correspondientes\ del\ circuito\ contenidos\ en\ el\ fichero\r\n\ @return\ Verdadero\ en\ caso\ de\ que\ est\u00E9\ todo\ correcto\r\n
comment4.params=
comment4.target=void\ crearGrafo()
comment4.text=\r\n\ Crea\ el\ grafo\ correspondiente\ al\ circuito\ le\u00EDdo\r\n
comment5.params=
comment5.target=void\ resolver()
comment5.text=\r\n\ Resuelve\ el\ circuito\ mediante\ el\ algoritmo\ de\ Dijkstra\r\n
comment6.params=d\ ps
comment6.target=void\ imprimirSolucion(grafos.voraces.Dijkstra,\ java.io.PrintStream)
comment6.text=\r\n\ Imprime\ la\ soluci\u00F3n\ que\ se\ ha\ obtenido\r\n
numComments=7
